name: Rust

on:
  push:
  pull_request:
  schedule:
     - cron: "15 4 * * *"

env:
  CARGO_TERM_COLOR: always

jobs:
  collect-data:
    runs-on: ubuntu-latest

    steps:
    - name: Report rust version
      run: |
        rustc -vV
        rustup update
        rustc -vV

    - uses: actions/checkout@v5

    #- name: Download binary
    #  env:
    #    GH_TOKEN: ${{ github.token }}
    #  run: |
    #      gh run list -R szabgab/pydigger.rs --limit 1 > run.txt
    #      cat run.txt
    #      RUN_ID=$(awk '{print $1}' run.txt)
    #      gh run download $RUN_ID -R szabgab/pydigger.rs
    #      rm -f run.txt
    #      ls -l

    - name: Download binary
      run: |
          curl -s -H "Accept: application/vnd.github+json" "https://api.github.com/repos/szabgab/pydigger.rs/actions/artifacts" > artifacts.json
          cat artifacts.json
          ARTIFACT_ID=$(jq '.artifacts[0].id' artifacts.json)
          echo "ARTIFACT_ID=$ARTIFACT_ID" >> $GITHUB_ENV
          curl -L -H "Accept: application/vnd.github+json" "https://api.github.com/repos/szabgab/pydigger.rs/actions/artifacts/$ARTIFACT_ID/zip" -o artifact.zip
          unzip artifact.zip
          tree


    - name: List
      run: |
        chmod +x pydigger
        ls -al
        tree

    - name: Collect data
      run: ./pydigger --download --report

    - name: Tree
      run: tree

#    - name: Commit new data
#      run: |
#        cd data
#        GIT_STATUS=$(git status --porcelain)
#        echo $GIT_STATUS
#        git config user.name github-actions[bot]
#        git config user.email 41898282+github-actions[bot]@users.noreply.github.com
#        git add .
#        if [ "$GIT_STATUS" != "" ]; then git commit -m "Automated data collection"; fi
#        if [ "$GIT_STATUS" != "" ]; then git push; fi
